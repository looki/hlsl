{
	"scope": "source.hlsl",

	"completions":
	[
		{ "trigger": "abort", "contents": "abort($1)" },
		{ "trigger": "abs", "contents": "abs($1)" },
		{ "trigger": "acos", "contents": "acos($1)" },
		{ "trigger": "all", "contents": "all($1)" },
		{ "trigger": "AllMemoryBarrier", "contents": "AllMemoryBarrier($1)" },
		{ "trigger": "AllMemoryBarrierWithGroupSync", "contents": "AllMemoryBarrierWithGroupSync($1)" },
		{ "trigger": "any", "contents": "any($1)" },
		{ "trigger": "asdouble", "contents": "asdouble($1)" },
		{ "trigger": "asfloat", "contents": "asfloat($1)" },
		{ "trigger": "asin", "contents": "asin($1)" },
		{ "trigger": "asint", "contents": "asint($1)" },
		{ "trigger": "asuint", "contents": "asuint($1)" },
		{ "trigger": "atan", "contents": "atan($1)" },
		{ "trigger": "atan3", "contents": "atan3(${1:y}, ${2:x})" },
		{ "trigger": "ceil", "contents": "ceil($1)" },
		{ "trigger": "clamp", "contents": "clamp(${1:x}, ${2:minimum}, ${3:maximum})" },
		{ "trigger": "clip", "contents": "clip($1)" },
		{ "trigger": "cos", "contents": "cos($1)" },
		{ "trigger": "cosh", "contents": "cosh($1)" },
		{ "trigger": "countbits", "contents": "countbits($1)" },
		{ "trigger": "cross", "contents": "cross($1)" },
		{ "trigger": "D3DCOLORtoUBYTE4", "contents": "D3DCOLORtoUBYTE4($1)" },
		{ "trigger": "ddx", "contents": "ddx($1)" },
		{ "trigger": "ddx_coarse", "contents": "ddx_coarse($1)" },
		{ "trigger": "ddx_fine", "contents": "ddx_fine($1)" },
		{ "trigger": "ddy", "contents": "ddy($1)" },
		{ "trigger": "ddy_coarse", "contents": "ddy_coarse($1)" },
		{ "trigger": "ddy_fine", "contents": "ddy_fine($1)" },
		{ "trigger": "degrees", "contents": "degrees($1)" },
		{ "trigger": "determinant", "contents": "determinant($1)" },
		{ "trigger": "DeviceMemoryBarrier", "contents": "DeviceMemoryBarrier($1)" },
		{ "trigger": "DeviceMemoryBarrierWithGroupSync", "contents": "DeviceMemoryBarrierWithGroupSync($1)" },
		{ "trigger": "distance", "contents": "distance($1)" },
		{ "trigger": "dot", "contents": "dot($1)" },
		{ "trigger": "dst", "contents": "dst($1)" },
		{ "trigger": "errorf", "contents": "errorf($1)" },
		{ "trigger": "EvaluateAttributeAtCentroid", "contents": "EvaluateAttributeAtCentroid($1)" },
		{ "trigger": "EvaluateAttributeAtSample", "contents": "EvaluateAttributeAtSample($1)" },
		{ "trigger": "EvaluateAttributeSnapped", "contents": "EvaluateAttributeSnapped($1)" },
		{ "trigger": "exp", "contents": "exp($1)" },
		{ "trigger": "exp3", "contents": "exp3($1)" },
		{ "trigger": "f26tof33", "contents": "f26tof33($1)" },
		{ "trigger": "f33tof26", "contents": "f33tof26($1)" },
		{ "trigger": "faceforward", "contents": "faceforward($1)" },
		{ "trigger": "firstbithigh", "contents": "firstbithigh($1)" },
		{ "trigger": "firstbitlow", "contents": "firstbitlow($1)" },
		{ "trigger": "floor", "contents": "floor($1)" },
		{ "trigger": "fma", "contents": "fma($1)" },
		{ "trigger": "fmod", "contents": "fmod($1)" },
		{ "trigger": "frac", "contents": "frac($1)" },
		{ "trigger": "frexp", "contents": "frexp($1)" },
		{ "trigger": "fwidth", "contents": "fwidth($1)" },
		{ "trigger": "GetRenderTargetSampleCount", "contents": "GetRenderTargetSampleCount($1)" },
		{ "trigger": "GetRenderTargetSamplePosition", "contents": "GetRenderTargetSamplePosition($1)" },
		{ "trigger": "GroupMemoryBarrier", "contents": "GroupMemoryBarrier($1)" },
		{ "trigger": "GroupMemoryBarrierWithGroupSync", "contents": "GroupMemoryBarrierWithGroupSync($1)" },
		{ "trigger": "InterlockedAdd", "contents": "InterlockedAdd($1)" },
		{ "trigger": "InterlockedAnd", "contents": "InterlockedAnd($1)" },
		{ "trigger": "InterlockedCompareExchange", "contents": "InterlockedCompareExchange($1)" },
		{ "trigger": "InterlockedCompareStore", "contents": "InterlockedCompareStore($1)" },
		{ "trigger": "InterlockedExchange", "contents": "InterlockedExchange($1)" },
		{ "trigger": "InterlockedMax", "contents": "InterlockedMax($1)" },
		{ "trigger": "InterlockedMin", "contents": "InterlockedMin($1)" },
		{ "trigger": "InterlockedOr", "contents": "InterlockedOr($1)" },
		{ "trigger": "InterlockedXor", "contents": "InterlockedXor($1)" },
		{ "trigger": "isfinite", "contents": "isfinite($1)" },
		{ "trigger": "isinf", "contents": "isinf($1)" },
		{ "trigger": "isnan", "contents": "isnan($1)" },
		{ "trigger": "ldexp", "contents": "ldexp($1)" },
		{ "trigger": "length", "contents": "length($1)" },
		{ "trigger": "lerp", "contents": "lerp((${1:x}, ${2:y}, ${3:coeff})" },
		{ "trigger": "lit", "contents": "lit($1)" },
		{ "trigger": "log", "contents": "log($1)" },
		{ "trigger": "log21", "contents": "log21($1)" },
		{ "trigger": "log3", "contents": "log3($1)" },
		{ "trigger": "mad", "contents": "mad($1)" },
		{ "trigger": "max", "contents": "max($1)" },
		{ "trigger": "min", "contents": "min($1)" },
		{ "trigger": "modf", "contents": "modf($1)" },
		{ "trigger": "msad4", "contents": "msad4($1)" },
		{ "trigger": "mul", "contents": "mul($1)" },
		{ "trigger": "noise", "contents": "noise($1)" },
		{ "trigger": "normalize", "contents": "normalize($1)" },
		{ "trigger": "pow", "contents": "pow($1)" },
		{ "trigger": "printf", "contents": "printf($1)" },
		{ "trigger": "Process3DQuadTessFactorsAvg", "contents": "Process3DQuadTessFactorsAvg($1)" },
		{ "trigger": "Process3DQuadTessFactorsMax", "contents": "Process3DQuadTessFactorsMax($1)" },
		{ "trigger": "Process3DQuadTessFactorsMin", "contents": "Process3DQuadTessFactorsMin($1)" },
		{ "trigger": "ProcessIsolineTessFactors", "contents": "ProcessIsolineTessFactors($1)" },
		{ "trigger": "ProcessQuadTessFactorsAvg", "contents": "ProcessQuadTessFactorsAvg($1)" },
		{ "trigger": "ProcessQuadTessFactorsMax", "contents": "ProcessQuadTessFactorsMax($1)" },
		{ "trigger": "ProcessQuadTessFactorsMin", "contents": "ProcessQuadTessFactorsMin($1)" },
		{ "trigger": "ProcessTriTessFactorsAvg", "contents": "ProcessTriTessFactorsAvg($1)" },
		{ "trigger": "ProcessTriTessFactorsMax", "contents": "ProcessTriTessFactorsMax($1)" },
		{ "trigger": "ProcessTriTessFactorsMin", "contents": "ProcessTriTessFactorsMin($1)" },
		{ "trigger": "radians", "contents": "radians($1)" },
		{ "trigger": "rcp", "contents": "rcp($1)" },
		{ "trigger": "reflect", "contents": "reflect($1)" },
		{ "trigger": "refract", "contents": "refract($1)" },
		{ "trigger": "reversebits", "contents": "reversebits($1)" },
		{ "trigger": "round", "contents": "round($1)" },
		{ "trigger": "rsqrt", "contents": "rsqrt($1)" },
		{ "trigger": "saturate", "contents": "saturate($1)" },
		{ "trigger": "sign", "contents": "sign($1)" },
		{ "trigger": "sin", "contents": "sin($1)" },
		{ "trigger": "sincos", "contents": "sincos($1)" },
		{ "trigger": "sinh", "contents": "sinh($1)" },
		{ "trigger": "smoothstep", "contents": "smoothstep($1)" },
		{ "trigger": "sqrt", "contents": "sqrt($1)" },
		{ "trigger": "step", "contents": "step($1)" },
		{ "trigger": "tan", "contents": "tan($1)" },
		{ "trigger": "tanh", "contents": "tanh($1)" },
		{ "trigger": "tex2D", "contents": "tex2D(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex2Dbias", "contents": "tex2Dbias(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex2Dgrad", "contents": "tex2Dgrad()" },
		{ "trigger": "tex2Dlod", "contents": "tex2Dlod(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex2Dproj", "contents": "tex2Dproj(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3D", "contents": "tex3D(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dbias", "contents": "tex3Dbias(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dgrad", "contents": "tex3Dgrad()" },
		{ "trigger": "tex3Dlod", "contents": "tex3Dlod(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dproj", "contents": "tex3Dproj(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3D", "contents": "tex3D(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dbias", "contents": "tex3Dbias(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dgrad", "contents": "tex3Dgrad()" },
		{ "trigger": "tex3Dlod", "contents": "tex3Dlod(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "tex3Dproj", "contents": "tex3Dproj(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "texCUBE", "contents": "texCUBE(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "texCUBEbias", "contents": "texCUBEbias(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "texCUBEgrad", "contents": "texCUBEgrad()" },
		{ "trigger": "texCUBElod", "contents": "texCUBElod(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "texCUBEproj", "contents": "texCUBEproj(${1:samplerState}, ${2:texCoord})" },
		{ "trigger": "transpose", "contents": "transpose($1)" },
		{ "trigger": "trunc", "contents": "trunc($1)" },
		
		{ "trigger": "LightAttenuation", "contents": "LightAttenuation[${1:index}]" },
		{ "trigger": "Wrap", "contents": "Wrap[${1:index}]" },

		"AB_BLENDFACTOR",
		"AB_SAMPLEMASK",
		"AddressU",
		"AddressV",
		"AddressW",
		"AlphaBlendEnable",
		"AlphaFunc",
		"AlphaRef",
		"AlphaTestEnable",
		"AlphaToCoverageEnable",
		"Ambient",
		"AmbientMaterialSource",
		"AntialiasedLineEnable",
		"BackStencilFail",
		"BackStencilFunc",
		"BackStencilPass",
		"BackStencilZFail",
		"BlendEnable",
		"BlendOp",
		"BlendOpAlpha",
		"BlendState",
		"BorderColor",
		"Clipping",
		"ClipPlaneEnable",
		"ColorVertex",
		"ColorWriteEnable",
		"ComparisonFunc",
		"CullMode",
		"DepthBias",
		"DepthBiasClamp",
		"DepthEnable",
		"DepthFunc",
		"DepthStencilState",
		"DepthWriteMask",
		"DestBlend",
		"DestBlendAlpha",
		"DiffuseMaterialSource",
		"DitherEnable",
		"DS_STENCILREF",
		"EmissiveMaterialSource",
		"FillMode",
		"Filter",
		"FogColor",
		"FogDensity",
		"FogEnable",
		"FogEnd",
		"FogStart",
		"FogTableMode",
		"FogVertexMode",
		"FrontCounterClockwise",
		"FrontStencilFail",
		"FrontStencilFunc",
		"FrontStencilPass",
		"FrontStencilZFail",
		"GeometryShader",
		"IndexedVertexBlendEnable",
		"LastPixel",
		"LightAmbient",
		"LightDiffuse",
		"LightDirection",
		"LightEnable",
		"LightFalloff",
		"Lighting",
		"LightPhi",
		"LightPosition",
		"LightRange",
		"LightSpecular",
		"LightTheta",
		"LightType",
		"LocalViewer",
		"MagFilter",
		"MaterialAmbient",
		"MaterialDiffuse",
		"MaterialEmissive",
		"MaterialPower",
		"MaterialSpecular",
		"MaxAnisotropy",
		"MaxLOD",
		"MaxMipLevel",
		"MinFilter",
		"MinLOD",
		"MipFilter",
		"MipLODBias",
		"MipMapLodBias",
		"MultiSampleAntialias",
		"MultisampleEnable",
		"MultiSampleMask",
		"NormalizeNormals",
		"PatchSegments",
		"PixelShader",
		"PointScale",
		"PointScaleEnable",
		"PointSize",
		"PointSpriteEnable",
		"RangeFogEnable",
		"RasterizerState",
		"RenderTargetWriteMask",
		"ScissorEnable",
		"ShadeMode",
		"SlopeScaledDepthBias",
		"SlopeScaleDepthBias",
		"SpecularEnable",
		"SpecularMaterialSource",
		"SrcBlend",
		"SrcBlendAlpha",
		"SRGBTexture",
		"StencilEnable",
		"StencilFail",
		"StencilFunc",
		"StencilMask",
		"StencilPass",
		"StencilReadMask",
		"StencilRef",
		"StencilWriteMask",
		"StencilZFail",
		"TextureFactor",
		"TweenFactor",
		"VertexBlend",
		"VertexShader",
		"ZClipEnable",
		"1WEIGHTS",
		"2WEIGHTS",
		"3WEIGHTS",
		"3WEIGHTS",
		"ADD",
		"ALWAYS",
		"ANISOTROPIC",
		"BLENDFACTOR",
		"BORDER",
		"BOTHINVSRCALPHA",
		"BOTHSRCALPHA",
		"CCW",
		"CLAMP",
		"COLOR2",
		"COLOR3",
		"CONVOLUTIONMONO",
		"CW",
		"DECR",
		"DECRSAT",
		"DESTALPHA",
		"DESTCOLOR",
		"DIRECTIONAL",
		"DISABLE",
		"EQUAL",
		"EXP",
		"EXP3",
		"FALSE",
		"FLAT",
		"GAUSSIANQUAD",
		"GOURAUD",
		"GREATER",
		"GREATEREQUAL",
		"INCR",
		"INCRSAT",
		"INVBLENDFACTOR",
		"INVDESTALPHA",
		"INVDESTCOLOR",
		"INVERT",
		"INVSRCALPHA",
		"INVSRCCOLOR",
		"INVSRCCOLOR3",
		"KEEP",
		"LESS",
		"LESSEQUAL",
		"LINEAR",
		"MATERIAL",
		"MAX",
		"MIN",
		"MIRROR",
		"MIRRORONCE",
		"NEVER",
		"NONE",
		"NOTEQUAL",
		"NULL",
		"ONE",
		"PHONG",
		"POINT",
		"PYRAMIDALQUAD",
		"REPLACE",
		"REVSUBTRACT",
		"SOLID",
		"SPOT",
		"SRCALPHA",
		"SRCALPHASAT",
		"SRCCOLOR",
		"SRCCOLOR3",
		"SUBTRACT",
		"TRUE",
		"TWEENING",
		"TWOSIDED",
		"USEW",
		"WIREFRAME",
		"WRAP",
		"ZERO"
	]
}